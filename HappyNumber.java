/***************************************************************************************************************************************
Name: Happy Number 

Description: A happy number is a number defined by the following process: 
	     Starting with any positive integer, replace the number by the sum of the squares of its digits, and 
	     repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which 
	     does not include 1. Those numbers for which this process ends in 1 are happy numbers.

Example: Input: 19
	 Output: true
	 Explanation: 12 + 92 = 82
	 	      82 + 22 = 68
		      62 + 82 = 100
		      12 + 02 + 02 = 1

Steps:
	1. We use HASH SET data structure for storing all the previously encountered numbers in current sequence
	2. We make use of while loop to get the next number only if the two conditions -> n is not equal to 1 and when 
	     the current number is not in the HashSet are satisfied.
	3. During this course, we keep adding the intermediate numbers generated by summing squares of each digit of the 
	     number(n) to the HashSet and the sum value is the updated value of n
	4. We terminate the while-loop when we hit a circle and 'set.contains()' works as a break point of a while-loop	  
	5. Then check if the last number is 1, if it is, return true. Otherwise, return false.

Note: All numbers would end in a circle if we consider 1,1,1,1... is also a circle. 
      So after the sequence hit a circle, we just need to check if the current number is 1, if it is, then
      it's a happy number. Otherwise it's not a happy number.

Time complexity: O(log * n) or almost O(1).

Space complexity: O(log * n).

***************************************************************************************************************************************/

import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class HappyNumber{
    
    public static boolean isHappy(int n)
    {
        Set<Integer> set = new HashSet<>();
        while(n != 1 && !set.contains(n))
        {
	        set.add(n);
	        int sum = 0;
	        while(n > 0)
	        {   
		        sum += Math.pow((n % 10), 2);
		        n /= 10;
		    }
		    n = sum;
        }

        return n == 1;
    }

    public static void main(String []args)
    {
        Scanner input = new Scanner(System.in);
        
        System.out.print("Enter number to check if it is happy or not: ");
        int num = input.nextInt();
             
        boolean n = isHappy(num);
	    System.out.println(n);

        input.close();
    }
}